server:
  port: 8090
  servlet:
    session:
      timeout: 2h
    context-path: /springboot/action

spring:
  datasource:
    druid:
      master:
        # JDBC 配置
        url: 'jdbc:mysql://10.101.17.134:3306/master-test?useUnicode=true&characterEncoding=UTF-8&useSSL=false&serverTimezone=Hongkong'
        username: test
        password: 4testenv
        # 连接池的配置信息
      slave:
        # JDBC 配置
        url: 'jdbc:mysql://10.101.17.134:3306/slave-test?useUnicode=true&characterEncoding=UTF-8&useSSL=false&serverTimezone=Hongkong'
        username: test
        password: 4testenv
      driver-class-name: com.mysql.jdbc.Driver
        # 连接池的配置信息
      # 初始化大小，最小，最大
      initial-size: 5
      min-idle: 5
      maxActive: 20
      # 配置获取连接等待超时的时间
      maxWait: 60000
      # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
      timeBetweenEvictionRunsMillis: 60000
      # 配置一个连接在池中最小生存的时间，单位是毫秒
      minEvictableIdleTimeMillis: 300000
      validationQuery: 'SELECT 1 FROM DUAL'
      testWhileIdle: true
      testOnBorrow: false
      testOnReturn: false
      # 打开PSCache，并且指定每个连接上PSCache的大小
      poolPreparedStatements: true
      maxPoolPreparedStatementPerConnectionSize: 20
      # 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
      filters: stat
      # 通过connectProperties属性来打开mergeSql功能；慢SQL记录
      connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=2000
      # 配置DruidStatFilter
      web-stat-filter:
        enabled: true
        url-pattern: '/*'
        exclusions: '*.js,*.gif,*.jpg,*.bmp,*.png,*.css,*.ico,/druid/*'
      # 配置DruidStatViewServlet
      stat-view-servlet:
        url-pattern: "/druid/*"
        # IP白名单(没有配置或者为空，则允许所有访问)
        # allow: 127.0.0.1,192.168.163.1
        # IP黑名单 (存在共同时，deny优先于allow)
        # deny: 192.168.1.73
        reset-enable: false     # 禁用HTML页面上的“Reset All”功能
        login-username: admin   # 登录名
        login-password: 123456  # 登录密码

test:
  params:
    param1: "value1"



